{
  "title": "CLI Reference | PLANQK Docs",
  "content": "CLI Reference | PLANQK Docs\nSkip to content\nSearch\nK\nMain Navigation\nLogin\nSign Up\nPricing\nQuantum Backends\nAppearance\nMenu\nReturn to top\nSidebar Navigation\nGetting Started\nQuickstart\nAvailable Backends\nQuantum SDK\nService SDK\nCLI Reference\nplanqk.json Reference\nManage Organizations\nManage Access Tokens\nManage Quantum Jobs\nImplementations\nIntroduction\nGetting Started\nImplementation Settings\nCreate a Service\nManaged Services\nIntroduction\nService Configuration\nDescribe your API\nRun as Jobs\nCustom Docker Containers\nRuntime Interface\nUsing a Service\nApplications\nUsing a Service\nService Orchestration\nIntroduction\nThe Workflow Editor\nA Workflow Example\nOn-Premise Services\nIntroduction\nPublish on Marketplace\nReport Service Usage\nDemos\nIntroduction\nDeploy a Demo\nSet Environment Variables\nStarter Templates\nAutomation\nCI/CD Integration with PLANQK\nGitHub Workflows\nGitLab CI\nTutorials\nExecute Qiskit Circuits using the PLANQK Quantum SDK\nSolving the Maximum Independent Set Problem on QuEra Aquila using the PLANQK Quantum SDK\nUtilize the PLANQK Service SDK for Local Development\nCreate and Test an On-Premise Service\nAccess D-Wave Leap in a PLANQK Service\nAccess IBM Quantum Platform Backends in a PLANQK Service\nUse Qiskit Runtime in a PLANQK Service\nCommunity\nIntroduction\nAlgorithms\nData Pools\nUse Cases\nMarkdown & LaTeX\nManage Permissions\nPublishing Content\nReviews\nOn this page\nCLI Reference\n​\nThe PLANQK Command Line Interface (CLI) lets you interact with the PLANQK Platform directly from your terminal. We have installation instructions to guide you through the initial setup in our\nquickstart\nguide.\nInstallation\n​\nTo install the PLANQK CLI, you must install Node.js 18 or higher and the npm command line interface using either a\nNode version manager\nor a\nNode installer\n.\nThen install the PLANQK CLI globally using npm:\nbash\nnpm\ninstall\n-g\n@planqk/planqk-cli\nIMPORTANT\nMake sure you have uninstalled the deprecated CLI:\nbash\nnpm\nuninstall\n-g\n@anaqor/planqk\nYou can use the\nhelp\ncommand to get information about the supported commands:\nbash\nplanqk\nhelp\nYou may also get information about a specific command:\nbash\nplanqk\nhelp\n<\ncomman\nd\n>\n# or\nplanqk\n<\ncomman\nd\n>\n--help\nAuthentication\n​\nPlease copy your\npersonal access token\nto your clipboard.\nLogin to your account using your access token:\nbash\nplanqk\nlogin\n-t\n<\nyour\naccess\ntoke\nn\n>\nUsage\n​\nsh-session\n$ npm install -g @planqk/planqk-cli\n$ planqk COMMAND\nrunning command...\n$ planqk (--version)\n@planqk/planqk-cli/2.24.1 darwin-arm64 node-v22.11.0\n$ planqk --help [COMMAND]\nUSAGE\n$ planqk COMMAND\n...\nCommands\n​\nplanqk autocomplete [SHELL]\nplanqk compress\nplanqk get-context\nplanqk help [COMMAND]\nplanqk init\nplanqk list-contexts\nplanqk login\nplanqk logout\nplanqk openapi\nplanqk run [SERVICEID]\nplanqk serve\nplanqk services\nplanqk set-context [CONTEXTID]\nplanqk up\nplanqk version\nplanqk autocomplete [SHELL]\n​\nDisplay autocomplete installation instructions.\nUSAGE\n$ planqk autocomplete [SHELL] [-r]\nARGUMENTS\nSHELL  (zsh|bash|powershell) Shell type\nFLAGS\n-r, --refresh-cache  Refresh cache (ignores displaying instructions)\nDESCRIPTION\nDisplay autocomplete installation instructions.\nEXAMPLES\n$ planqk autocomplete\n$ planqk autocomplete bash\n$ planqk autocomplete zsh\n$ planqk autocomplete powershell\n$ planqk autocomplete --refresh-cache\nSee code:\n@oclif/plugin-autocomplete\nplanqk compress\n​\nCompresses the current project and creates a ZIP file. Use the '.planqkignore' file to exclude files and directories from the ZIP file.\nUSAGE\n$ planqk compress\nDESCRIPTION\nCompresses the current project and creates a ZIP file. Use the '.planqkignore' file to exclude files and directories\nfrom the ZIP file.\nEXAMPLES\n$ planqk compress\nSee code:\nsrc/commands/compress/index.ts\nplanqk get-context\n​\nGet the current context, i.e., the personal or organization account you are currently working with.\nUSAGE\n$ planqk get-context\nDESCRIPTION\nGet the current context, i.e., the personal or organization account you are currently working with.\nEXAMPLES\n$ planqk get-context\nSee code:\nsrc/commands/get-context/index.ts\nplanqk help [COMMAND]\n​\nDisplay help for planqk.\nUSAGE\n$ planqk help [COMMAND...] [-n]\nARGUMENTS\nCOMMAND...  Command to show help for.\nFLAGS\n-n, --nested-commands  Include all nested commands in the output.\nDESCRIPTION\nDisplay help for planqk.\nSee code:\n@oclif/plugin-help\nplanqk init\n​\nBootstrap project to create a PLANQK Service.\nUSAGE\n$ planqk init [--name <value>] [--non-interactive]\nFLAGS\n--name=<value>     The name of the service\n--non-interactive  Run it in non-interactive mode\nDESCRIPTION\nBootstrap project to create a PLANQK Service.\nEXAMPLES\n$ planqk init\nSee code:\nsrc/commands/init/index.ts\nplanqk list-contexts\n​\nRetrieves the available contexts, i.e., the personal or organizational accounts available to you to work with.\nUSAGE\n$ planqk list-contexts\nDESCRIPTION\nRetrieves the available contexts, i.e., the personal or organizational accounts available to you to work with.\nEXAMPLES\n$ planqk list-contexts\nSee code:\nsrc/commands/list-contexts/index.ts\nplanqk login\n​\nLogin with your PLANQK credentials\nUSAGE\n$ planqk login [-t <value>]\nFLAGS\n-t, --token=<value>  Your personal access token\nDESCRIPTION\nLogin with your PLANQK credentials\nEXAMPLES\n$ planqk login -t <personal access token>\nSee code:\nsrc/commands/login/index.ts\nplanqk logout\n​\nLogout from PLANQK\nUSAGE\n$ planqk logout\nDESCRIPTION\nLogout from PLANQK\nEXAMPLES\n$ planqk logout\nSee code:\nsrc/commands/logout/index.ts\nplanqk openapi\n​\nGenerates the OpenAPI description for your project based on the parameter and return types of your run() method. You can use this command to verify how the API of your project would look like when deployed on PLANQK. The output of this command will be used when creating or updating your service.\nUSAGE\n$ planqk openapi [-f] [--file <value>] [--format <value>]\nFLAGS\n-f, --force           Overwrite the output file if it already exists\n--file=<value>    The file to write the OpenAPI description to\n--format=<value>  The format to generate the OpenAPI description [possible values: yaml]\nDESCRIPTION\nGenerates the OpenAPI description for your project based on the parameter and return types of your run() method. You\ncan use this command to verify how the API of your project would look like when deployed on PLANQK. The output of this\ncommand will be used when creating or updating your service.\nEXAMPLES\n$ planqk openapi\n$ planqk openapi --file=./openapi.yaml --format=yaml --force\nSee code:\nsrc/commands/openapi/index.ts\nplanqk run [SERVICEID]\n​\nCreates a job execution of a PLANQK Service\nUSAGE\n$ planqk run [SERVICEID] [-d <value>] [--data-file <value>] [--detached] [-p <value>] [--params-file\n<value>]\nFLAGS\n-d, --data=<value>         Input data as JSON string.\n-p, --params=<value>       Parameters as JSON string.\n--data-file=<value>    Relative path to file containing input data.\n--detached             Executes the job in detached mode, i.e., without waiting for it to finish.\n--params-file=<value>  Relative path to file containing params.\nDESCRIPTION\nCreates a job execution of a PLANQK Service\nEXAMPLES\n$ planqk run\n$ planqk run --detached\n$ planqk run -d '{\"values\": [10,12]}' -p '{\"round_up\": true}'\n$ planqk run --data-file=./input/data.json --params-file=./input/params.json\nSee code:\nsrc/commands/run/index.ts\nplanqk serve\n​\nRuns your project in a containerized environment and expose it through a local web server, similarly to how PLANQK would run your code. The local web server exposes the same HTTP endpoints to start a service execution, to check the status of running executions, to cancel executions, and to retrieve execution results.\nUSAGE\n$ planqk serve [-p <value>] [--log_level <value>]\nFLAGS\n-p, --port=<value>       The port on which the local web server accepts requests\n--log_level=<value>  [default: INFO] The log level for the service, possible values: DEBUG, INFO, WARNING, ERROR,\nCRITICAL\nDESCRIPTION\nRuns your project in a containerized environment and expose it through a local web server, similarly to how PLANQK\nwould run your code. The local web server exposes the same HTTP endpoints to start a service execution, to check the\nstatus of running executions, to cancel executions, and to retrieve execution results.\nEXAMPLES\n$ planqk serve\n$ planqk serve -p <port> --log_level <log_level>\nSee code:\nsrc/commands/serve/index.ts\nplanqk services\n​\nList all services of the current context.\nUSAGE\n$ planqk services\nDESCRIPTION\nList all services of the current context.\nEXAMPLES\n$ planqk services\nSee code:\nsrc/commands/services/index.ts\nplanqk set-context [CONTEXTID]\n​\nSet the current context, i.e., the personal or organization account you are currently working with.\nUSAGE\n$ planqk set-context [CONTEXTID]\nDESCRIPTION\nSet the current context, i.e., the personal or organization account you are currently working with.\nEXAMPLES\n$ planqk set-context\n$ planqk set-context <context-id>\nSee code:\nsrc/commands/set-context/index.ts\nplanqk up\n​\nCreates or updates a PLANQK service\nUSAGE\n$ planqk up [--silent]\nFLAGS\n--silent  Suppresses all outputs, helpful when executed in a CI/CD pipeline.\nDESCRIPTION\nCreates or updates a PLANQK service\nEXAMPLES\n$ planqk up\nSee code:\nsrc/commands/up/index.ts\nplanqk version\n​\nUSAGE\n$ planqk version [--json] [--verbose]\nFLAGS\n--verbose  Show additional information about the CLI.\nGLOBAL FLAGS\n--json  Format output as json.\nFLAG DESCRIPTIONS\n--verbose  Show additional information about the CLI.\nAdditionally shows the architecture, node version, operating system, and versions of plugins that the CLI is using.\nSee code:\n@oclif/plugin-version\nHelp us improve this page!\nLast updated:\nPager\nPrevious page\nService SDK\nNext page\nplanqk.json Reference\nPublished under the CC-BY-4.0 License.\nCopyright © 2023-present | Kipu Quantum GmbH",
  "url": "https://docs.planqk.de/cli-reference.html"
}