{
  "title": "Getting started | PLANQK Docs",
  "content": "Getting started | PLANQK Docs\nSkip to content\nSearch\nK\nMain Navigation\nLogin\nSign Up\nPricing\nQuantum Backends\nAppearance\nMenu\nReturn to top\nSidebar Navigation\nGetting Started\nQuickstart\nAvailable Backends\nQuantum SDK\nService SDK\nCLI Reference\nplanqk.json Reference\nManage Organizations\nManage Access Tokens\nManage Quantum Jobs\nImplementations\nIntroduction\nGetting Started\nImplementation Settings\nCreate a Service\nManaged Services\nIntroduction\nService Configuration\nDescribe your API\nRun as Jobs\nCustom Docker Containers\nRuntime Interface\nUsing a Service\nApplications\nUsing a Service\nService Orchestration\nIntroduction\nThe Workflow Editor\nA Workflow Example\nOn-Premise Services\nIntroduction\nPublish on Marketplace\nReport Service Usage\nDemos\nIntroduction\nDeploy a Demo\nSet Environment Variables\nStarter Templates\nAutomation\nCI/CD Integration with PLANQK\nGitHub Workflows\nGitLab CI\nTutorials\nExecute Qiskit Circuits using the PLANQK Quantum SDK\nSolving the Maximum Independent Set Problem on QuEra Aquila using the PLANQK Quantum SDK\nUtilize the PLANQK Service SDK for Local Development\nCreate and Test an On-Premise Service\nAccess D-Wave Leap in a PLANQK Service\nAccess IBM Quantum Platform Backends in a PLANQK Service\nUse Qiskit Runtime in a PLANQK Service\nCommunity\nIntroduction\nAlgorithms\nData Pools\nUse Cases\nMarkdown & LaTeX\nManage Permissions\nPublishing Content\nReviews\nOn this page\nGetting started\n​\nThis beginner-friendly guide will teach you the basic skills you need to create and manage your first implementation.\nRequirements\n​\nThis guide assumes that you have Git installed on your machine. If you do not have git available as a CLI command yet, you will need to install Git for your platform.\nCreating an implementation\n​\nTo create a new Implementation, visit the\nCreate Implementation\npage. Enter a name for your implementation and click on the \"Create\" button.\nAfter creating the implementation, you should see a page like this:\nNote that the lock icon indicates that the implementation is\nprivate\n. Learn how to make your implementation\npublic\nin the\nsettings\nsection.\nMoreover, the empty implementation page provides you a set of command line instructions to clone the repository and start working on your implementation. In the following we will go through the steps to clone the repository and add a README file.\nCloning the repository locally\n​\nDownloading the implementation to your local machine is called cloning. You can clone the implementation and navigate to it using the following commands:\nbash\ngit\nclone\nhttps://planqk:\n<\npersonal-access-toke\nn\n>\n@git.platform.planqk.de/\n<\nyour-user-i\nd\n>\n/\n<\nimplementation-nam\ne\n>\n.git\ncd\n<\nimplementation-nam\ne\n>\nBest\njust copy the clone command\nfrom the command line instructions on the implementation page. This command already contains the\ncorrect URL\nto clone the repository.\nAuthentication\nThe PLANQK Git Server supports HTTPS with basic authentication. You can authenticate by providing your personal access token in the Git URL. You can clone any repository that you have at least 'Viewer' permissions for. Learn more about permissions in the\nsettings\nsection.\nAdd a README\n​\nNow let's add a README file to your repository that provides information about your implementation. Feel free to add some markdown content to the README file.\nbash\ntouch\nREADME.md\nPush your changes\n​\nYou can use Git to save new files and any changes to already existing files as a bundle of changes called a\ncommit\n, which can be thought of as a “revision” to your project. In order to sync the new commit with PLANQK, you then\npush\nthe commit. Push your code using the following commands:\nbash\n## Create any file you like and add some content! Then...\ngit\nadd\n.\ngit\ncommit\n-m\n\"add README\"\ngit\npush\n--set-upstream\norigin\nmain\nThat's it! After refreshing your implementation page, you will see all your recently added files. For example in the screenshot below the user added its implementation for a\nManaged Service\n.\nNote that one of the files is a Dockerfile. In case a Dockerfile is present in the implementation a \"Create Service\" button is available in the UI to\ncreate a PLANQK Service\nbased on the implementation.\nWhat's next?\n​\nLearn how to\nmanage permissions\n.\nLearn how to\nshare your implementation with the community\n.\nLearn how to\ncreate a PLANQK Service\n.\nHelp us improve this page!\nLast updated:\nPager\nPrevious page\nIntroduction\nNext page\nImplementation Settings\nPublished under the CC-BY-4.0 License.\nCopyright © 2023-present | Kipu Quantum GmbH",
  "url": "https://docs.planqk.de/implementations/getting-started.html"
}